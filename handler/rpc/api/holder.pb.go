// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.3
// source: holder.proto

package api

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Action int32

const (
	Action__ Action = 0
	// sys
	Action_SysWithdraw       Action = 1
	Action_ActionSysProperty Action = 2
	// proposal
	Action_ProposalMake  Action = 3
	Action_ProposalShout Action = 4
	Action_ProposalVote  Action = 5
	// Pool
	Action_PoolDonate Action = 6
	Action_PoolGain   Action = 7
	// Vault
	Action_VaultLock    Action = 8
	Action_VaultRelease Action = 9
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0: "_",
		1: "SysWithdraw",
		2: "ActionSysProperty",
		3: "ProposalMake",
		4: "ProposalShout",
		5: "ProposalVote",
		6: "PoolDonate",
		7: "PoolGain",
		8: "VaultLock",
		9: "VaultRelease",
	}
	Action_value = map[string]int32{
		"_":                 0,
		"SysWithdraw":       1,
		"ActionSysProperty": 2,
		"ProposalMake":      3,
		"ProposalShout":     4,
		"ProposalVote":      5,
		"PoolDonate":        6,
		"PoolGain":          7,
		"VaultLock":         8,
		"VaultRelease":      9,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_holder_proto_enumTypes[0].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_holder_proto_enumTypes[0]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{0}
}

type Transaction_Status int32

const (
	Transaction_Pending Transaction_Status = 0
	Transaction_Abort   Transaction_Status = 1
	Transaction_OK      Transaction_Status = 2
)

// Enum value maps for Transaction_Status.
var (
	Transaction_Status_name = map[int32]string{
		0: "Pending",
		1: "Abort",
		2: "OK",
	}
	Transaction_Status_value = map[string]int32{
		"Pending": 0,
		"Abort":   1,
		"OK":      2,
	}
)

func (x Transaction_Status) Enum() *Transaction_Status {
	p := new(Transaction_Status)
	*p = x
	return p
}

func (x Transaction_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Transaction_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_holder_proto_enumTypes[1].Descriptor()
}

func (Transaction_Status) Type() protoreflect.EnumType {
	return &file_holder_proto_enumTypes[1]
}

func (x Transaction_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Transaction_Status.Descriptor instead.
func (Transaction_Status) EnumDescriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{1, 0}
}

type Vault_Status int32

const (
	Vault_Locking  Vault_Status = 0
	Vault_Released Vault_Status = 1
)

// Enum value maps for Vault_Status.
var (
	Vault_Status_name = map[int32]string{
		0: "Locking",
		1: "Released",
	}
	Vault_Status_value = map[string]int32{
		"Locking":  0,
		"Released": 1,
	}
)

func (x Vault_Status) Enum() *Vault_Status {
	p := new(Vault_Status)
	*p = x
	return p
}

func (x Vault_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Vault_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_holder_proto_enumTypes[2].Descriptor()
}

func (Vault_Status) Type() protoreflect.EnumType {
	return &file_holder_proto_enumTypes[2]
}

func (x Vault_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Vault_Status.Descriptor instead.
func (Vault_Status) EnumDescriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{3, 0}
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextCursor string `protobuf:"bytes,1,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasNext    bool   `protobuf:"varint,2,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_holder_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_holder_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{0}
}

func (x *Pagination) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *Pagination) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: swaggertype:"string" format:"date"
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" swaggertype:"string" format:"date"`
	AssetId    string                 `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Amount     string                 `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Action     Action                 `protobuf:"varint,5,opt,name=action,proto3,enum=fox.holder.service.Action" json:"action,omitempty"`
	Status     Transaction_Status     `protobuf:"varint,6,opt,name=status,proto3,enum=fox.holder.service.Transaction_Status" json:"status,omitempty"`
	Msg        string                 `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg,omitempty"`
	Parameters string                 `protobuf:"bytes,8,opt,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_holder_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_holder_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{1}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Transaction) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *Transaction) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Transaction) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action__
}

func (x *Transaction) GetStatus() Transaction_Status {
	if x != nil {
		return x.Status
	}
	return Transaction_Pending
}

func (x *Transaction) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Transaction) GetParameters() string {
	if x != nil {
		return x.Parameters
	}
	return ""
}

type Pool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Logo      string `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`
	Amount    string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Share     string `protobuf:"bytes,5,opt,name=share,proto3" json:"share,omitempty"`
	Reward    string `protobuf:"bytes,6,opt,name=reward,proto3" json:"reward,omitempty"`
	Liquidity string `protobuf:"bytes,7,opt,name=liquidity,proto3" json:"liquidity,omitempty"`
	Profit    string `protobuf:"bytes,8,opt,name=profit,proto3" json:"profit,omitempty"`
	Price     string `protobuf:"bytes,9,opt,name=price,proto3" json:"price,omitempty"`
	// @inject_tag: swaggertype:"string" format:"date"
	RewardAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=reward_at,json=rewardAt,proto3" json:"reward_at,omitempty" swaggertype:"string" format:"date"`
}

func (x *Pool) Reset() {
	*x = Pool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_holder_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pool) ProtoMessage() {}

func (x *Pool) ProtoReflect() protoreflect.Message {
	mi := &file_holder_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pool.ProtoReflect.Descriptor instead.
func (*Pool) Descriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{2}
}

func (x *Pool) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Pool) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pool) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Pool) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Pool) GetShare() string {
	if x != nil {
		return x.Share
	}
	return ""
}

func (x *Pool) GetReward() string {
	if x != nil {
		return x.Reward
	}
	return ""
}

func (x *Pool) GetLiquidity() string {
	if x != nil {
		return x.Liquidity
	}
	return ""
}

func (x *Pool) GetProfit() string {
	if x != nil {
		return x.Profit
	}
	return ""
}

func (x *Pool) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Pool) GetRewardAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RewardAt
	}
	return nil
}

type Vault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: swaggertype:"string" format:"date"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" swaggertype:"string" format:"date"`
	// @inject_tag: swaggertype:"string" format:"date"
	ReleasedAt    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=released_at,json=releasedAt,proto3" json:"released_at,omitempty" swaggertype:"string" format:"date"`
	UserId        string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status        Vault_Status           `protobuf:"varint,5,opt,name=status,proto3,enum=fox.holder.service.Vault_Status" json:"status,omitempty"`
	AssetId       string                 `protobuf:"bytes,6,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Duration      int64                  `protobuf:"varint,7,opt,name=duration,proto3" json:"duration,omitempty"`
	MinDuration   int64                  `protobuf:"varint,8,opt,name=min_duration,json=minDuration,proto3" json:"min_duration,omitempty"`
	Amount        string                 `protobuf:"bytes,9,opt,name=amount,proto3" json:"amount,omitempty"`
	Share         string                 `protobuf:"bytes,10,opt,name=share,proto3" json:"share,omitempty"`
	Liquidity     string                 `protobuf:"bytes,11,opt,name=liquidity,proto3" json:"liquidity,omitempty"`
	Reward        string                 `protobuf:"bytes,12,opt,name=reward,proto3" json:"reward,omitempty"`
	Penalty       string                 `protobuf:"bytes,13,opt,name=penalty,proto3" json:"penalty,omitempty"`
	Pool          *Pool                  `protobuf:"bytes,14,opt,name=pool,proto3" json:"pool,omitempty"`
	LockedPrice   string                 `protobuf:"bytes,15,opt,name=locked_price,json=lockedPrice,proto3" json:"locked_price,omitempty"`
	ReleasedPrice string                 `protobuf:"bytes,16,opt,name=released_price,json=releasedPrice,proto3" json:"released_price,omitempty"`
}

func (x *Vault) Reset() {
	*x = Vault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_holder_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vault) ProtoMessage() {}

func (x *Vault) ProtoReflect() protoreflect.Message {
	mi := &file_holder_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vault.ProtoReflect.Descriptor instead.
func (*Vault) Descriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{3}
}

func (x *Vault) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vault) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Vault) GetReleasedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleasedAt
	}
	return nil
}

func (x *Vault) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Vault) GetStatus() Vault_Status {
	if x != nil {
		return x.Status
	}
	return Vault_Locking
}

func (x *Vault) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *Vault) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Vault) GetMinDuration() int64 {
	if x != nil {
		return x.MinDuration
	}
	return 0
}

func (x *Vault) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Vault) GetShare() string {
	if x != nil {
		return x.Share
	}
	return ""
}

func (x *Vault) GetLiquidity() string {
	if x != nil {
		return x.Liquidity
	}
	return ""
}

func (x *Vault) GetReward() string {
	if x != nil {
		return x.Reward
	}
	return ""
}

func (x *Vault) GetPenalty() string {
	if x != nil {
		return x.Penalty
	}
	return ""
}

func (x *Vault) GetPool() *Pool {
	if x != nil {
		return x.Pool
	}
	return nil
}

func (x *Vault) GetLockedPrice() string {
	if x != nil {
		return x.LockedPrice
	}
	return ""
}

func (x *Vault) GetReleasedPrice() string {
	if x != nil {
		return x.ReleasedPrice
	}
	return ""
}

type Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Req) Reset() {
	*x = Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_holder_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req) ProtoMessage() {}

func (x *Req) ProtoReflect() protoreflect.Message {
	mi := &file_holder_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req.ProtoReflect.Descriptor instead.
func (*Req) Descriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{4}
}

type Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Resp) Reset() {
	*x = Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_holder_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp) ProtoMessage() {}

func (x *Resp) ProtoReflect() protoreflect.Message {
	mi := &file_holder_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp.ProtoReflect.Descriptor instead.
func (*Resp) Descriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{5}
}

type Req_ListPools struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Req_ListPools) Reset() {
	*x = Req_ListPools{}
	if protoimpl.UnsafeEnabled {
		mi := &file_holder_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListPools) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListPools) ProtoMessage() {}

func (x *Req_ListPools) ProtoReflect() protoreflect.Message {
	mi := &file_holder_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListPools.ProtoReflect.Descriptor instead.
func (*Req_ListPools) Descriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{4, 0}
}

type Req_FindVault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: valid:"uuid,required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" valid:"uuid,required"`
}

func (x *Req_FindVault) Reset() {
	*x = Req_FindVault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_holder_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_FindVault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_FindVault) ProtoMessage() {}

func (x *Req_FindVault) ProtoReflect() protoreflect.Message {
	mi := &file_holder_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_FindVault.ProtoReflect.Descriptor instead.
func (*Req_FindVault) Descriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Req_FindVault) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// List All Vaults
type Req_ListVaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Req_ListVaults) Reset() {
	*x = Req_ListVaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_holder_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListVaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListVaults) ProtoMessage() {}

func (x *Req_ListVaults) ProtoReflect() protoreflect.Message {
	mi := &file_holder_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListVaults.ProtoReflect.Descriptor instead.
func (*Req_ListVaults) Descriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{4, 2}
}

// Find Tx By FollowID
type Req_FindTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: valid:"uuid,required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" valid:"uuid,required"`
}

func (x *Req_FindTransaction) Reset() {
	*x = Req_FindTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_holder_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_FindTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_FindTransaction) ProtoMessage() {}

func (x *Req_FindTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_holder_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_FindTransaction.ProtoReflect.Descriptor instead.
func (*Req_FindTransaction) Descriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{4, 3}
}

func (x *Req_FindTransaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Req_ListTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor string `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Req_ListTransactions) Reset() {
	*x = Req_ListTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_holder_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListTransactions) ProtoMessage() {}

func (x *Req_ListTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_holder_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListTransactions.ProtoReflect.Descriptor instead.
func (*Req_ListTransactions) Descriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{4, 4}
}

func (x *Req_ListTransactions) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *Req_ListTransactions) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Resp_ListPools struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pools []*Pool `protobuf:"bytes,1,rep,name=pools,proto3" json:"pools,omitempty"`
}

func (x *Resp_ListPools) Reset() {
	*x = Resp_ListPools{}
	if protoimpl.UnsafeEnabled {
		mi := &file_holder_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp_ListPools) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp_ListPools) ProtoMessage() {}

func (x *Resp_ListPools) ProtoReflect() protoreflect.Message {
	mi := &file_holder_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp_ListPools.ProtoReflect.Descriptor instead.
func (*Resp_ListPools) Descriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Resp_ListPools) GetPools() []*Pool {
	if x != nil {
		return x.Pools
	}
	return nil
}

type Resp_ListVaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vaults []*Vault `protobuf:"bytes,1,rep,name=vaults,proto3" json:"vaults,omitempty"`
}

func (x *Resp_ListVaults) Reset() {
	*x = Resp_ListVaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_holder_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp_ListVaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp_ListVaults) ProtoMessage() {}

func (x *Resp_ListVaults) ProtoReflect() protoreflect.Message {
	mi := &file_holder_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp_ListVaults.ProtoReflect.Descriptor instead.
func (*Resp_ListVaults) Descriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{5, 1}
}

func (x *Resp_ListVaults) GetVaults() []*Vault {
	if x != nil {
		return x.Vaults
	}
	return nil
}

type Resp_ListTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Pagination   *Pagination    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *Resp_ListTransactions) Reset() {
	*x = Resp_ListTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_holder_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp_ListTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp_ListTransactions) ProtoMessage() {}

func (x *Resp_ListTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_holder_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp_ListTransactions.ProtoReflect.Descriptor instead.
func (*Resp_ListTransactions) Descriptor() ([]byte, []int) {
	return file_holder_proto_rawDescGZIP(), []int{5, 2}
}

func (x *Resp_ListTransactions) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Resp_ListTransactions) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_holder_proto protoreflect.FileDescriptor

var file_holder_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x66, 0x6f, 0x78, 0x2e, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x22, 0xdb, 0x02,
	0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x66, 0x6f,
	0x78, 0x2e, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x22, 0x28, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x62, 0x6f, 0x72,
	0x74, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x02, 0x22, 0x89, 0x02, 0x0a, 0x04,
	0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x37,
	0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x74, 0x22, 0xd7, 0x04, 0x0a, 0x05, 0x56, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65,
	0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x6e,
	0x61, 0x6c, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x70, 0x6f,
	0x6f, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x23, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x6f, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x10,
	0x01, 0x22, 0xa2, 0x01, 0x0a, 0x03, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x0a, 0x09, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x1a, 0x1b, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x61,
	0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x1a, 0x0c, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74,
	0x73, 0x1a, 0x21, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x1a, 0x40, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x9e, 0x02, 0x0a, 0x04, 0x52, 0x65, 0x73, 0x70, 0x1a,
	0x3b, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x05,
	0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6f,
	0x78, 0x2e, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x05, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x1a, 0x3f, 0x0a, 0x0a,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x76, 0x61,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x78,
	0x2e, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x56, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x97, 0x01,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x43, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x6f,
	0x78, 0x2e, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0xad, 0x01, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x05, 0x0a, 0x01, 0x5f, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x79, 0x73,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x10,
	0x02, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4d, 0x61, 0x6b,
	0x65, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x53,
	0x68, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x6f, 0x6f, 0x6c,
	0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x6f, 0x6f, 0x6c,
	0x47, 0x61, 0x69, 0x6e, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x4c,
	0x6f, 0x63, 0x6b, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x10, 0x09, 0x32, 0xc4, 0x03, 0x0a, 0x06, 0x48, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x12, 0x5b, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1f,
	0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x67, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x28, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x29, 0x2e,
	0x66, 0x6f, 0x78, 0x2e, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x21, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x1a, 0x22, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x49, 0x0a, 0x09,
	0x46, 0x69, 0x6e, 0x64, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x2e, 0x66, 0x6f, 0x78, 0x2e,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x71, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x1a, 0x19, 0x2e, 0x66,
	0x6f, 0x78, 0x2e, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x55, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x23, 0x2e, 0x66, 0x6f, 0x78, 0x2e,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x42, 0x07,
	0x5a, 0x05, 0x2e, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_holder_proto_rawDescOnce sync.Once
	file_holder_proto_rawDescData = file_holder_proto_rawDesc
)

func file_holder_proto_rawDescGZIP() []byte {
	file_holder_proto_rawDescOnce.Do(func() {
		file_holder_proto_rawDescData = protoimpl.X.CompressGZIP(file_holder_proto_rawDescData)
	})
	return file_holder_proto_rawDescData
}

var file_holder_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_holder_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_holder_proto_goTypes = []interface{}{
	(Action)(0),                   // 0: fox.holder.service.Action
	(Transaction_Status)(0),       // 1: fox.holder.service.Transaction.Status
	(Vault_Status)(0),             // 2: fox.holder.service.Vault.Status
	(*Pagination)(nil),            // 3: fox.holder.service.Pagination
	(*Transaction)(nil),           // 4: fox.holder.service.Transaction
	(*Pool)(nil),                  // 5: fox.holder.service.Pool
	(*Vault)(nil),                 // 6: fox.holder.service.Vault
	(*Req)(nil),                   // 7: fox.holder.service.Req
	(*Resp)(nil),                  // 8: fox.holder.service.Resp
	(*Req_ListPools)(nil),         // 9: fox.holder.service.Req.ListPools
	(*Req_FindVault)(nil),         // 10: fox.holder.service.Req.FindVault
	(*Req_ListVaults)(nil),        // 11: fox.holder.service.Req.ListVaults
	(*Req_FindTransaction)(nil),   // 12: fox.holder.service.Req.FindTransaction
	(*Req_ListTransactions)(nil),  // 13: fox.holder.service.Req.ListTransactions
	(*Resp_ListPools)(nil),        // 14: fox.holder.service.Resp.ListPools
	(*Resp_ListVaults)(nil),       // 15: fox.holder.service.Resp.ListVaults
	(*Resp_ListTransactions)(nil), // 16: fox.holder.service.Resp.ListTransactions
	(*timestamppb.Timestamp)(nil), // 17: google.protobuf.Timestamp
}
var file_holder_proto_depIdxs = []int32{
	17, // 0: fox.holder.service.Transaction.created_at:type_name -> google.protobuf.Timestamp
	0,  // 1: fox.holder.service.Transaction.action:type_name -> fox.holder.service.Action
	1,  // 2: fox.holder.service.Transaction.status:type_name -> fox.holder.service.Transaction.Status
	17, // 3: fox.holder.service.Pool.reward_at:type_name -> google.protobuf.Timestamp
	17, // 4: fox.holder.service.Vault.created_at:type_name -> google.protobuf.Timestamp
	17, // 5: fox.holder.service.Vault.released_at:type_name -> google.protobuf.Timestamp
	2,  // 6: fox.holder.service.Vault.status:type_name -> fox.holder.service.Vault.Status
	5,  // 7: fox.holder.service.Vault.pool:type_name -> fox.holder.service.Pool
	5,  // 8: fox.holder.service.Resp.ListPools.pools:type_name -> fox.holder.service.Pool
	6,  // 9: fox.holder.service.Resp.ListVaults.vaults:type_name -> fox.holder.service.Vault
	4,  // 10: fox.holder.service.Resp.ListTransactions.transactions:type_name -> fox.holder.service.Transaction
	3,  // 11: fox.holder.service.Resp.ListTransactions.pagination:type_name -> fox.holder.service.Pagination
	12, // 12: fox.holder.service.Holder.FindTransaction:input_type -> fox.holder.service.Req.FindTransaction
	13, // 13: fox.holder.service.Holder.ListTransactions:input_type -> fox.holder.service.Req.ListTransactions
	9,  // 14: fox.holder.service.Holder.ListPools:input_type -> fox.holder.service.Req.ListPools
	10, // 15: fox.holder.service.Holder.FindVault:input_type -> fox.holder.service.Req.FindVault
	11, // 16: fox.holder.service.Holder.ListVaults:input_type -> fox.holder.service.Req.ListVaults
	4,  // 17: fox.holder.service.Holder.FindTransaction:output_type -> fox.holder.service.Transaction
	16, // 18: fox.holder.service.Holder.ListTransactions:output_type -> fox.holder.service.Resp.ListTransactions
	14, // 19: fox.holder.service.Holder.ListPools:output_type -> fox.holder.service.Resp.ListPools
	6,  // 20: fox.holder.service.Holder.FindVault:output_type -> fox.holder.service.Vault
	15, // 21: fox.holder.service.Holder.ListVaults:output_type -> fox.holder.service.Resp.ListVaults
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_holder_proto_init() }
func file_holder_proto_init() {
	if File_holder_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_holder_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_holder_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_holder_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_holder_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_holder_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_holder_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_holder_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListPools); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_holder_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_FindVault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_holder_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListVaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_holder_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_FindTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_holder_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_holder_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp_ListPools); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_holder_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp_ListVaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_holder_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp_ListTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_holder_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_holder_proto_goTypes,
		DependencyIndexes: file_holder_proto_depIdxs,
		EnumInfos:         file_holder_proto_enumTypes,
		MessageInfos:      file_holder_proto_msgTypes,
	}.Build()
	File_holder_proto = out.File
	file_holder_proto_rawDesc = nil
	file_holder_proto_goTypes = nil
	file_holder_proto_depIdxs = nil
}
